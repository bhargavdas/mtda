# ---------------------------------------------------------------------------
# CI workflows for MTDA
# ---------------------------------------------------------------------------
#
# This software is a part of MTDA.
# Copyright (C) 2022 Siemens Digital Industries Software
#
# ---------------------------------------------------------------------------
# SPDX-License-Identifier: MIT
# ---------------------------------------------------------------------------

name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Check code for issues
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: tox
        run: |
          pip3 install --user tox
          tox -s
  mtda-nanopi-images:
    name: Debian image for running MTDA on NanoPI boards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build packages
        run: |
          export KAS_BUILD_DIR=${PWD}/build-nanopi
          ./kas-container build --target mc:nanopi-neo:mtda-packages kas/debian/mtda-nanopi-all.yml
          ./kas-container build --target mc:nanopi-r1:mtda-packages kas/debian/mtda-nanopi-all.yml
      - name: Build image
        if: github.ref == 'refs/heads/master'
        run: |
          export KAS_BUILD_DIR=${PWD}/build-nanopi
          ./kas-container build kas/debian/mtda-nanopi-all.yml
      - name: Upload image
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: mtda-nanopi-images
          path: |
            build-nanopi/tmp/deploy/images/nanopi-*/isar-image-base-debian-bullseye-nanopi-*.wic.img
            build-nanopi/tmp/deploy/images/nanopi-*/isar-image-base-debian-bullseye-nanopi-*.wic.img.bmap
      - name: Publish .deb to Gemfury
        env:
          GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
        if: github.ref == 'refs/heads/master'
        run: |
          find build-nanopi/tmp/deploy/isar-apt -name '*.deb' -print | while read p; do
            curl -F package=@${p} https://{$GEMFURY_PUSH_TOKEN}@push.fury.io/mtda/;
          done
  mtda-debian-qemu-amd64-packages:
    name: Debian packages for running MTDA on amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build packages
        run: |
          export KAS_BUILD_DIR=${PWD}/build-amd64
          ./kas-container build --target mtda-packages kas/debian/mtda-qemu-amd64.yml
          ./kas-container build --target qemu-packages kas/debian/mtda-qemu-amd64.yml
      - name: Publish .deb to Gemfury
        env:
          GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
        if: github.ref == 'refs/heads/master'
        run: |
          find build-amd64/tmp/deploy/isar-apt -name '*.deb' -print | while read p; do
            curl -F package=@${p} https://{$GEMFURY_PUSH_TOKEN}@push.fury.io/mtda/;
          done
  mtda-ubuntu-qemu-amd64-packages:
    name: Ubuntu packages for running MTDA on amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build packages
        run: |
          export KAS_BUILD_DIR=${PWD}/build-amd64
          ./kas-container build --target mtda-packages kas/ubuntu/mtda-qemu-amd64.yml
          ./kas-container build --target qemu-packages kas/ubuntu/mtda-qemu-amd64.yml
